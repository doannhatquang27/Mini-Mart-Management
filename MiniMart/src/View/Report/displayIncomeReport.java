/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Report;

import Model.Income;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import DBUtils.TblStockInOutDetails;
import java.util.Locale;
import java.util.ResourceBundle;

/**
 *
 * @author ASUS
 */
public class displayIncomeReport extends javax.swing.JFrame {
    ArrayList<Income> incomeList;
    /**
     * Creates new form displayIncomeReport
     */
    public displayIncomeReport() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbxMonth = new javax.swing.JComboBox<>();
        lblISR = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        cbxLanguage = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        cbxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxMonth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxMonthItemStateChanged(evt);
            }
        });

        lblISR.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblISR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblISR.setText("Income Statement Report");

        jLabel2.setText("Month:");

        txtArea.setEditable(false);
        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        cbxLanguage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EN", "VN" }));
        cbxLanguage.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxLanguageItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblISR, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblISR)
                    .addComponent(cbxLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try {
            ArrayList<Integer> monthList = loadMonthList();
            loadMonthCbx(monthList);
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowActivated

    private void cbxMonthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxMonthItemStateChanged
        if (cbxMonth.getSelectedItem() != null) {
            int selectedMonth = Integer.parseInt(cbxMonth.getSelectedItem().toString());
            writeReport(selectedMonth, incomeList);
        }
    }//GEN-LAST:event_cbxMonthItemStateChanged

    private void cbxLanguageItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxLanguageItemStateChanged
        Locale loc;

        if (cbxLanguage.getSelectedItem().equals("VN")) {
            loc = new Locale("vi", "VN");
            changeLanguageTo(loc);
        } else {
            loc = new Locale("en", "US");
            changeLanguageTo(loc);
        }
    }//GEN-LAST:event_cbxLanguageItemStateChanged
    
    public ArrayList<Integer> loadMonthList() throws ClassNotFoundException, SQLException {
        ArrayList<Integer> monthlist = new ArrayList<>();
        this.incomeList = new TblStockInOutDetails().loadStoreAmount();
        Income temp;

        for (int i = 0; i < incomeList.size(); i++) {
            temp = incomeList.get(i);
            Calendar cal = Calendar.getInstance();
            cal.setTime(temp.getDate());

            int month = cal.get(Calendar.MONTH) + 1;
            boolean isExisted = false;

            for (int j = 0; j < monthlist.size(); j++) {
                if (month == monthlist.get(j)) {
                    isExisted = true;
                    break;
                }
            }

            if (!isExisted) {
                monthlist.add(month);
            }
        }
        return monthlist;
    }
    
    public void loadMonthCbx(ArrayList<Integer> monthList) {
        cbxMonth.removeAllItems();
        
        for (int i = 0; i < monthList.size(); i++) {
            cbxMonth.addItem(Integer.toString(monthList.get(i)));
        }
    }
    
    public void writeReport(int month, ArrayList<Income> incomeList) {
        int incomeTotal = 0, outcomeTotal = 0;
        txtArea.setText("");
        txtArea.append("Income in month " + month + "\n");
        
        for (int i = 0; i < incomeList.size(); i++) {
            Income temp = incomeList.get(i);
            Calendar cal = Calendar.getInstance();
            cal.setTime(temp.getDate());
            int tempMonth = cal.get(Calendar.MONTH) + 1;
            
            if (tempMonth == month && temp.getAmount() > 0) {
                txtArea.append("Date " + temp.getDate() + " - Total = " + temp.getAmount() * temp.getPrice() + "\n");
                incomeTotal += temp.getAmount() * temp.getPrice();
            }
        }
        
        txtArea.append("Total income = " + incomeTotal + "\n\n\n\n");
        txtArea.append("Outcome in month " + month + "\n");
        
        for (int i = 0; i < incomeList.size(); i++) {
            Income temp = incomeList.get(i);
            Calendar cal = Calendar.getInstance();
            cal.setTime(temp.getDate());
            int tempMonth = cal.get(Calendar.MONTH) + 1;
            
            if (tempMonth == month && temp.getAmount() < 0) {
                txtArea.append("Date " + temp.getDate() + " - Total = " + -1 * temp.getAmount() * temp.getPrice() + "\n");
                outcomeTotal += -1 * temp.getAmount() * temp.getPrice();
            }
        }
        
        txtArea.append("Total outcome = " + outcomeTotal + "\n");
    }
    
    public void changeLanguageTo(Locale loc) {
        ResourceBundle rb = ResourceBundle.getBundle("pkgLanguage/MessageBundle", loc);
        lblISR.setText(rb.getString("lblISR"));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(displayIncomeReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(displayIncomeReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(displayIncomeReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(displayIncomeReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new displayIncomeReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbxLanguage;
    private javax.swing.JComboBox<String> cbxMonth;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblISR;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
